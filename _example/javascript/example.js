(function(a){$.ku4webApp.config.collections={ku4StoreType:"localStorage",card:{name:"card"}};$.ku4webApp.config.forms={card:[{selector:"#cardNameField",type:"field",required:true},{selector:"#cardPhotoField",type:"imageFileField",maxDims:[100,100]},{selector:"#cardValueField",type:"field",required:true,format:function(b){return $.money.parse(b).value()}},{selector:"#cardDescriptionField",type:"field",required:true}]};$.ku4webApp.config.navigator={ku4OnAppLoad:function(b){if(b.hashContainsArguments()&&b.hashEquals("card.edit")){b.execute(b.read())}else{b.execute("card.list")}},"card.list":{model:"card",method:"listCards"},"card.add":{model:"card",method:"createCard"},"card.edit":{model:"card",method:"editCard"}};$.ku4webApp.config.services={"card.list":{verb:"GET",uri:"./_serverStub/cardList.json",contentType:"text/json",success:"svc+cardsListed",error:"svc-cardsListed"},"card.add":{verb:"POST",uri:"./_serverStub/cardAdd.json",contentType:"text/json",success:"svc+cardAdded",error:"svc-cardAdded"}};$.ku4webApp.config.sockets={};$.ku4webApp.config.templates.forms={card:'<form id="cardForm" class="card-form" action=""><fieldset><legend>Card Info</legend><input id="cardPhotoField" name="photo" class="card-photo-field" type="file" accept="image/*" capture="camera" /><input id="cardNameField" name="name" class="card-name-field" type="text" placeholder="Card Name"/><input id="cardValueField" name="value" class="card-value-field" type="number" placeholder="999.99"/><textarea id="cardDescriptionField" name="description" class="card-description-field" placeholder="Description"></textarea></fieldset><div class="card-form-controls">{{controls}}</div></form>',cardAddControl:'<button class="card-add-control" onclick="cardController.add(); return false;">Add</button>',cardEditControl:'<button class="card-update-control" onclick="cardController.update(); return false;">Update</button>'};$.ku4webApp.config.templates.views={cardList:'<div class="card-list js-card-list"></div><button class="card-add-control js-card-add-control" onclick="cardController.create();">Add Card</button>',card:'<div class="card js-card"><img src="{{photo}}" class="card-photo js-card-photo"/><span class="card-name js-card-name">{{name}}</span><span class="card-value js-card-value">{{value}}</span><span class="card-description js-card-description">{{description}}</span><button class="card-edit-control" onclick="cardController.edit(\'{{id}}\');">Edit</button></div>'};$.ku4webApp.config.validators={card:[{name:"name",spec:$.spec(function(b){return/^\w{1,140}$/.test(b)}),message:"Username is invalid."},{name:"description",spec:$.spec(function(b){return/.{1,140}/.test(b)}),message:"Invalid description."},{name:"value",spec:$.spec(function(b){return $.money.canParse(b)}),message:"Invalid value."}]};$.ku4webApp.controller("card",{list:function(){this.$model("card").listCards();return this},create:function(){this.$model("card").createCard();return this},add:function(){this.$model("card").addCard(this.$form("card").read());return this},edit:function(b){this.$model("card").editCard(b);return this}});$.ku4webApp.model("card",{listCards:function(){if(this.$state().is("cardsListed")){this.$notify("onCardsListed",this.$collection("card").find())}else{this.$service("card.list").call()}return this},createCard:function(){this.$notify("onCreateCard");return this},addCard:function(c){try{c.update("photo",$.image.dataUrlFromFile(c.find("photo")))}catch(d){}var b=c.add("id",$.uid()).toObject();this.$collection("card").insert(b);this.$notify("onCardAdded",b);return this},editCard:function(c){var b=this.$collection("card").find({id:c});if(!($.isArray(b)&&b.length==1)){this.$notify("onError",new Error("Card collection corrupted."))}else{this.$notify("onEditCard",b[0])}return this},updateCard:function(c){var b=c.toObject();this.$collection("card").update({id:b.id},b);this.$notify("onCardUpdated",b);return this},onCardsListed:function(c){var b=$.dto.parseJson(c).toObject();this.$collection("card").init(b);this.$state().set("cardsListed");this.$notify("onCardsListed",b)},onCardAdded:function(c){var b=$.dto.parseJson(c).toObject();this.$collection("card").insert(b)},onCardsListedError:function(b){this.$notify("onCardListedError, onError",new Error("Card listing exception."))}},{"svc+cardsListed":"onCardsListed","svc-cardsListed":"onCardsListedError"});$.ku4webApp.template("card",{renderAddCardForm:function(){var b=this.$forms("cardAddControl");return this.$render(this.$forms("card"),{controls:b})},renderEditCardForm:function(){var b=this.$forms("cardEditControl");return this.$render(this.$forms("card"),{controls:b})},renderCard:function(b){return this.$render(this.$views("card"),b,"",function(c){c.value=$.money.parse(c.value).toString();return c})},renderCardList:function(b){return this.$renderList(this.$views("card"),b,"",function(c){c.value=$.money.parse(c.value).toString();return c})}});$.ku4webApp.view("card",{displayCardList:function(c){this._clearSite();var b=this.$template("card").renderCardList(c);$("#site").append(b)},displayCardAdded:function(c){this._clearSite();var b=this.$template("card").renderCard(c);$("#site").append(b)},displayAddCard:function(c){this._clearSite();var b=this.$template("card").renderAddCardForm();$("#site").append(b)},displayEditCard:function(c){this._clearSite();var b=this.$template("card").renderEditCardForm();$("#site").append(b);this.$form("card").write(c);this.$navigator().write("card.edit",c.id)},displayCardListError:function(b){console.log("ERROR",b)},displayError:function(b){console.log("ERROR",b)},_clearSite:function(){$("#site").html("")}},{onCardsListed:"displayCardList",onCardAdded:"displayCardAdded",onAddCard:"displayAddCard",onEditCard:"displayEditCard",onCardsListedError:"displayCardListError",onError:"displayError"})})();